@using System.Diagnostics.Eventing.Reader
@using CvHub.Controllers
@using Data.Models
@using Helpers
@using Shared
@using Shared.Models
@model Shared.Models.MyCVViewModel

@{
    CvHelper cvHelper = new CvHelper();
    ProfessionHelper professionHelper = new ProfessionHelper(cvHelper.GetApplicationDbContext());
    ViewBag.Title = "Index";
    var opac = "opacity: 1;";
    if (Model.Deactivated)
    {
        opac = "opacity: 0.2;";
    }
    
}
<button type="button" class="btn btn-primary" onclick="location.href = '@Url.Action("Export", "Account", new {creator = @Model.Creator, userid = @Model.Id})'" style="font-size: 1em; width: 5em;">Export Profile</button>

@if (@Model.Deactivated){
@*Start of modal*@
    <div class="modal" style="width: 80vw; height: 100vh; display: block; top: 25%; left: 10%;">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Your account is activated</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true"></span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Would you like to activate your account?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="location.href = '@Url.Action("ActivateCV","MyProfilePage")'">Activate</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="location.href = '@Url.Action("index","Home")'">Cancel</button>
                </div>
            </div>
        </div>
    </div>
}
@*End of modal*@

<div style="@opac">
<h2 style="text-align: center; font-size: 4em">@Model.FirstName @Model.LastName</h2>






<div class="profilBild">
    <img style="border-radius: 50%; width: 15%; box-shadow: 0 3px 10px rgb(0 0 0 / 0.2)" src="/UploadedImages/@Model.ImagePath" />
    @if (@Model.allowEdit)
    {<button type="button" class="btn btn-primary" onclick="location.href = '@Url.Action("EditCV", "Account", new {id = @Model.Id})'" style="font-size: 1em; width: 5em;">Edit Profile</button>}
</div>


<div class="card text-white bg-primary mb-3" style="max-width: 45%; float: right">
    <div class="card-header">Bio</div>
    <div class="card-body">

        <p class="card-text">@Model.Bio</p>
    </div>
</div>


<div class="readOnlyFält" id="basic-info">
    <div class="form-group row" style="">
        <label for="staticEmail" class="col-sm-2 col-form-label">Email:</label>
        <div class="col-sm-10">
            <input type="text" readonly="" class="form-control-plaintext" id="staticEmail" value="@Model.Email">
        </div>
    </div>
    <div class="form-group row" style="">
        <label for="staticEmail" class="col-sm-2 col-form-label">Telnr:</label>
        <div class="col-sm-10">
            <input type="text" readonly="" class="form-control-plaintext" id="staticEmail" value="@Model.Phonenumber">
        </div>
    </div>


    <div class="form-group row" style="">
        <label for="staticEmail" class="col-sm-2 col-form-label">Profession: </label>
        <div class="col-sm-10">
            <input type="text" readonly="" class="form-control-plaintext" id="staticEmail" value=" @Model.ProfessionName">
        </div>
    </div>
</div>

<div class="list-group" style="width: 45%;">
    <h2>Education</h2>
    @if (@Model.allowEdit)
    {
        <button type="button" class="btn btn-primary" onclick="location.href = '@Url.Action("Create", "Education", new {@model = Model.Id}),'" style="font-size: 1em; width: 7em;">Create new</button>
    }
    @if (Model.isEducationsEmpty)
    {
        <p>No educations to show.</p>
    }
    else
    {
        foreach (var education in @Model.Educations)
        {
            <a href="#" class="list-group-item list-group-item-action flex-column align-items-start active">
                <div class="d-flex w-100 justify-content-between">
                    <h5 class="mb-1">@education.SchoolName</h5>
                    <small>@education.Description</small>
                </div>
                <p class="mb-1"> @education.EducationName</p>
                @if (@Model.allowEdit)
                {
                    <button type="button" class="btn btn-primary btn-remove-previous-exp" style="float: right; height: 2em" onclick="location.href = '@Url.Action("Delete", "Education", new {@id = education.Id})'">Remove</button>
                }
                <small>@education.StartYear.ToString("MMMM, yyyy").ToUpper() - @education.EndYear.ToString("MMMM, yyyy").ToUpper()</small>
            </a>
        }
    }
</div>



<div class="list-group" style="width: 45%; float: right;">
    <h2>Project</h2>
    @if (@Model.allowEdit)
    {<button type="button" class="btn btn-primary" onclick="location.href = '@Url.Action("Create", "Project", new {@model = Model.Id}),'" style="font-size: 1em; width: 7em;">Create new</button>
    }
    @if (Model.isProjectsEmpty)
    {
        <p>No previous experiences to show.</p>
    }
    else
    {
        foreach (var project in Model.Projects)
        {
            <a href="@Url.Action("Details", "Project", new{id = @project.Id}, null)" class="list-group-item list-group-item-action flex-column align-items-start active">
                <div class="d-flex w-100 justify-content-between">
                    <h5 class="mb-1">@project.Title</h5>
                    
                </div>
                <p class="mb-1">@project.Description</p>

            </a>
        }
    }
    @if(@Model.SimilarCv != null){
        <div style="display: inline-block; margin: 20px 0 20px 0; float: right">
            <div style="width: 15vw; display: inline-block; float: right; box-shadow: 0 3px 10px rgb(0 0 0 / 0.2)">
                <div class="card-body">
                    <h4>Similar CV</h4>
                    <h5 class="card-title">@Model.SimilarCv.FirstName @Model.SimilarCv.LastName</h5>
                    <h6 class="card-subtitle text-muted">@professionHelper.GetProfessionById(@Model.SimilarCv.Profession).ProfessionName</h6>
                </div>
                @{ var imagepath = "/UploadedImages/" + @Model.SimilarCv.ImagePath;}
                <img src="@imagepath" class="d-block user-select-none" width="100%" height="200" aria-label="Placeholder: Image cap" focusable="false" role="img" preserveAspectRatio="xMidYMid slice" viewBox="0 0 318 180" style="font-size: 1.125rem; text-anchor: middle" />
                <rect width="100%" height="100%" fill="#868e96"></rect>
                <button type="button" class="btn btn-primary" onclick="location.href = '@Url.Action("Details", "MyProfilePage", new {@Model.SimilarCv.Id}, null)'" )>View profile</button>
            </div>
        </div>
    }

</div>


<div class="list-group" style="width: 45%;">
    <h2>Previous experience</h2>
    @if (@Model.allowEdit)
    {
        <button type="button" class="btn btn-primary" onclick="location.href = '@Url.Action("Create", "PreviousExperience", new {@model = Model.Id}),'" style="font-size: 1em; width: 7em;">Create new</button>
    }
    @if (Model.isPreviousExperiencesEmpty)
    {
        <p>No previous experiences to show.</p>
    }
    else
    {
        foreach (var prevexp in @Model.PreviousExperience)
        {
            <a href="#" class="list-group-item list-group-item-action flex-column align-items-start active">
                <div class="d-flex w-100 justify-content-between">
                    <h5 class="mb-1">@prevexp.WorkplaceName</h5>
                    <small>@prevexp.WorkplaceTitle</small>
                </div>
                <p class="mb-1"> @prevexp.Description</p>
                @if (@Model.allowEdit)
                {<button type="button" class="btn btn-primary btn-remove-previous-exp" style="float: right; height: 2em" onclick="location.href = '@Url.Action("Delete", "PreviousExperience", new {@id = prevexp.Id})'">Remove</button>}
                <small>@prevexp.StartYear.ToString("MMMM, yyyy").ToUpper() - @prevexp.EndYear.ToString("MMMM, yyyy").ToUpper()</small>
            </a>
        }
    }
</div>



<div class="list-group" style="max-width: 30%; margin-top: 4%">

    <h3> Skills</h3>
    @if (@Model.allowEdit)
    {<button type="button" class="btn btn-primary" onclick="location.href = '@Url.Action("Create", "Skills")'" style="font-size: 1em; width: 5em;">Edit</button>}
    @if (Model.isSkillsEmpty)
    {
        <p>No skills to show.</p>
    }
    else
    {
        foreach (var skill in Model.Skills)
        {
            <a href="#" class="list-group-item list-group-item-action active" style="font-size: 1em">@skill.SkillName</a>
        }
    }

</div>


    
<div class="form-group" >
    @if (!Model.allowEdit)
    {
        <div style="width: 30%; display: inline-block">
            <div class="form-group">
                <label for="exampleTextarea" class="form-label mt-4">Message Me</label>
                @if (!Request.IsAuthenticated)
                {
                    <input type="text" id="inputName" class="form-control" placeholder="Name" id="inputDefault" style="margin-bottom: 3%">
                }
            </div>
            <textarea class="form-control" id="messageArea" rows="3"></textarea>
            <button type="button" class="btn btn-primary" id="sendBtn">Send</button>
        </div>}

       
    
</div>
        
@if(!Model.isReposEmpty){
    <div class="list-group" style="width: 45%; margin-top: 5%">
        <h2>Git-repos</h2>
  
        @foreach (var repo in Model.Repos)
        {
            <a href="@repo.html_url" class="list-group-item list-group-item-action flex-column align-items-start active">
                <div class="d-flex w-100 justify-content-between">
                    <h5 class="mb-1">@repo.Name</h5>
                    
                </div>
            </a>
        }



    </div>
}

</div>


@section scripts {
    @if (Model.allowEdit)
    {

        <script type="text/javascript">
            $(document).ready(function() {
                getVisitors();
            });

            function getVisitors() {
                $.ajax({
                    url: "/api/cv/visitors",
                    method: 'GET'
                }).then(function(data) {
                    var openingTag = '<div class="form-group row" style="">';
                    var closingTag = '</div>';
                    var openInput = '<div class="col-sm-10">';
                    var label = '<label for="staticEmail" class="col-sm-2 col-form-label">Visitors: </label>';
                    var visitCount = '<input type="text" readonly="" class="form-control-plaintext" id="visitors" value="' + data + '">';
                    $("#basic-info").append(openingTag + label + openInput + visitCount + closingTag + closingTag);
                })
            }
        </script>
    }
    else
    {
        <script type="text/javascript">
            $(document).ready(function() {
                increaseVisitors();
            });

            function increaseVisitors() {
                $.ajax({
                    url: "/api/cv/newView",
                    method: 'POST',
                    data: { cvID: @Model.Id }
                });
            }
        </script>
    }

    <script type="text/javascript">
        $("#sendBtn").click(function() {
            var message = $("#messageArea").val();
            // Rensar fönstret efter man skickat meddelandet
            var reciever = @Model.Id;
            if ($("#inputName").val() != null) {
                var sender = $("#inputName").val();
                // Rensar fönstret efter man skickat meddelandet
                
                $.ajax({
                    url: "/api/message/send",
                    method: 'POST',
                    data: {
                        Sender: sender,
                        MessageText: message,
                        RecieverId: reciever
                    },
                    success: function() {
                        window.alert('The message has been sent');
                        $("#inputName").val("");
                        $("#messageArea").val("");
                    },
                    error: function() {
                        window.alert('Input field has been left empty, please try again');
                    }
                })
            } else {
                var senderId = @Model.VisitorCvId;
                $.ajax({
                    url: "/api/message/send",
                    method: 'POST',
                    data: {
                        SenderId: senderId,
                        MessageText: message,
                        RecieverId: reciever
                    },
                    success: function () {
                        window.alert('The message has been sent');
                        $("#messageArea").val("");
                    },
                    error: function() {
                        window.alert('Input field has been left empty, please try again');
                    }
                })
            }
        })
    </script>
}

